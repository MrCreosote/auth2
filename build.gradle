/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
	id 'java'
	id 'war'
	id 'jacoco'
	id 'maven-publish'
	id 'org.ajoberstar.grgit' version '4.1.1'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.github.kbase'

repositories {
	mavenCentral()
	
	maven {
		name = "Clojars"
		url = "https://repo.clojars.org/"
	}
	maven {
		name = "JitPack" 
		url = 'https://jitpack.io'
	}
}
// Warning - these values are hard coded in AuthController.java
def JAR_TEMPLATE_DIR = 'kbase_auth2_templates'
def TEMPLATE_LIST_FILE_NAME = "templates.manifest"

task buildGitCommitFile {
	doLast {
		def commitId = grgit.head().id
		// is there a variable for builddir/classes/java/main?
		file("$buildDir/classes/java/main/us/kbase/auth2/gitcommit").text = commitId
	}
}

compileJava {
	// TODO BUILD remove when we no longer support java 8, use `options.release = 11` if needed
	java.sourceCompatibility = JavaVersion.VERSION_1_8
	java.targetCompatibility = JavaVersion.VERSION_1_8
	finalizedBy buildGitCommitFile
}

test {
	/* 
	 * TODO TEST Figure out why tests fail without this and remove. Might have something to do
	 * with the stfuLoggers() call in many of the tests, might kill logging for tests that
	 * require it
	 * Although it seems to make Mongo start up correctly as well which is odd
	 */
	forkEvery = 1
	/*
	  * TODO TEST split tests into mongo wrapper tests & all other tests (incl. integration).
	  * Set up GHA to run the non-mongo tests with a single version of mongo and run the
	  * mongo tests with matrixed mongo versions. Combine coverage at the end somehow
	*/
	systemProperty "AUTH2_TEST_CONFIG", "./test.cfg"
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
	finalizedBy jacocoTestReport
}

// TODO TEST add a test that starts the server in a docker container and checks some simple cmds

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = true
	}
}

javadoc {
	options {
		links "https://mongodb.github.io/mongo-java-driver/4.11/apidocs/mongodb-driver-sync/"
		// I don't know why this isn't working, but it's not worth spending time on right now
		links "https://docs.oracle.com/javase/8/docs/api/"
	}
}

war {
	webXml = file('war/web.xml')
}

configurations {
	// can't directly access testImplementation, so extend and access
	testimpl.extendsFrom testImplementation
}

task generateTemplateFileList {
	doLast {
		File directory = file('templates')

		// List files in the directory
		def files = fileTree(dir: directory).files.collect { it.name }
		
		File outputFile = file("$buildDir/" + TEMPLATE_LIST_FILE_NAME)
		outputFile.text = files.join('\n')
	}
}

shadowJar {
	// Be careful when updating jars - you may want to set the duplicates strategy to WARN
	// to see if any of the jars are shadowing the others when building the fat jar, which
	// has been the case in the past 
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	dependsOn generateTemplateFileList
	archiveAppendix = 'test-shadow'
	from sourceSets.test.output
	configurations = [project.configurations.testRuntimeClasspath]

	enableRelocation true
	relocationPrefix 'us.kbase.auth2.shadow'
	
	mergeServiceFiles()
	
	// Include text files from the "templates" directory
	from('templates') { into JAR_TEMPLATE_DIR }
	from("$buildDir/" + TEMPLATE_LIST_FILE_NAME) { into JAR_TEMPLATE_DIR }
}

task generateManageAuthScript {
	dependsOn compileJava
	doLast {
		def dependencies = configurations.runtimeClasspath.collect { File file ->
			file.absolutePath
		}
	
		def classpath = dependencies.join(':')
	
		def scriptContent = """#!/bin/sh

CLASSPATH=$classpath

java -cp build/classes/java/main:\$CLASSPATH us.kbase.auth2.cli.AuthCLI \$@
"""

		file("$buildDir/manage_auth").text = scriptContent
		file("$buildDir/manage_auth").setExecutable(true)
	}
}

publishing {
	publications {
		shadow(MavenPublication) { publication ->
			project.shadow.component(publication)
			artifactId = "auth2-test-shadow-all"
		}
	}
}

dependencies {

	/* Notes on exclusions:
	 * Bizarrely, the glassfish verison of inject has a dependency on v1 inject, which
	 * causes problems when trying to build the fat jar
	 * There are other spots in the dependency tree where v1 inject exists as well, and
	 * collides with the newer version.
	 * Inject v1 has the exact same directories and classes as the 2.5.0-b05 and so is
	 * shadowed in any case, so removal is presumably safe since the tests pass.
	 */

	implementation 'commons-codec:commons-codec:1.8'
	implementation 'commons-validator:commons-validator:1.5.1'
	implementation 'com.google.guava:guava:18.0'
	implementation 'org.ini4j:ini4j:0.5.2'
	implementation 'com.beust:jcommander:1.48'
	implementation 'org.mongodb:mongodb-driver-core:4.11.1'
	implementation 'org.mongodb:mongodb-driver-sync:4.11.1'
	implementation 'org.mongodb:bson-record-codec:4.11.1'
	implementation 'org.mongodb:bson:4.11.1'
	implementation('com.github.kbase:java_common:0.3.0') {
		exclude group: 'net.java.dev.jna' // breaks shadow jar
		exclude group: 'org.eclipse.jetty.aggregate'  // ugh, java common pollutes everything
		exclude group: 'com.fasterxml.jackson.core'  // breaks everything if we upgrade
		exclude group: 'javax.servlet', module: 'servlet-api'  // 2.5 vs 3.1 below
		// I have no idea why, but including the auth client in the build causes the shadow
		// jar to fail to start correctly. It shouldn't be a problem, but it is
		exclude group: 'com.github.kbase', module: 'auth2_client_java'
	}
	implementation 'ch.qos.logback:logback-classic:1.1.2'
	implementation 'org.slf4j:slf4j-api:1.7.25'
	// TODO DEPS Need to rework the java common logger to not use syslog4j at all since it's
	// abandonware and has a ton of CVEs, even in the newer versions.
	implementation "org.syslog4j:syslog4j:0.9.46"
	implementation 'com.github.spullara.mustache.java:compiler:0.9.3'
	implementation 'com.nulab-inc:zxcvbn:1.2.2'
	implementation 'nl.basjes.parse.useragent:yauaa:1.3'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.5.4'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.5.4'
	implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.4'
	implementation 'com.github.zafarkhaja:java-semver:0.9.0'
	implementation('org.glassfish.jersey.containers:jersey-container-servlet:2.23.2') {
		exclude group: 'javax.inject', module: 'javax.inject'
	}
	implementation('org.glassfish.jersey.media:jersey-media-json-jackson:2.23.2') {
		exclude group: 'javax.inject', module: 'javax.inject'
	}
	implementation('org.glassfish.jersey.ext:jersey-mvc-mustache:2.23.2') {
		exclude group: 'javax.inject', module: 'javax.inject'
		// The servlet namespace changed between 2.4 and 3.X, and so we need to exclude the
		// 2.4 namespace to avoid collisions. 3.X is backwards compatible:
		// https://docs.oracle.com/cd/E19798-01/821-1752/beagj/index.html
		exclude group: 'javax.servlet', module: 'servlet-api'
	}
	implementation 'javax.persistence:persistence-api:1.0'
	implementation 'javax.servlet:javax.servlet-api:3.1.0'
	implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
	
	
	testImplementation 'commons-io:commons-io:2.4'
	testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.1.10'
	testImplementation 'junit:junit:4.12'
	testImplementation('org.mock-server:mockserver-netty:3.10.4') {
		exclude group: 'javax.inject', module: 'javax.inject'
		// uses an old version of the activation api in a different namespace, so exclude it
		// in favor of the new one which is a transitive dependency elsewhere
		exclude group: 'javax.activation', module: 'activation'
	}
	testImplementation 'org.eclipse.jetty:jetty-server:9.3.11.v20160721'
	testImplementation 'org.eclipse.jetty:jetty-servlet:9.3.11.v20160721'
	testImplementation 'io.github.java-diff-utils:java-diff-utils:2.2.0'
	testImplementation 'de.danielbechler:java-object-diff:0.94'
	testImplementation 'org.jsoup:jsoup:1.10.2'
	testImplementation 'org.mockito:mockito-core:3.0.0'
	testImplementation('com.github.kbase:java_test_utilities:0.1.0') {
		exclude group: 'com.fasterxml.jackson.core'  // upgrading breaks stuff
	}
}

task showTestClassPath {
	doLast {
		configurations.testimpl.each { println it }
	}
}
